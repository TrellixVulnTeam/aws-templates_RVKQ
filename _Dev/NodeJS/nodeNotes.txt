
***************************************************************************************************
INSTALL NodeJS - for MacOS
***************************************************************************************************

https://www.tutorialspoint.com/nodejs/nodejs_environment_setup.htm
https://nodejs.org/download/
https://nodejs.org/download/release/latest/
https://nodejs.org/download/release/latest-v16.x/node-v16.13.1-darwin-x64.tar.gz
node-v16.13.1-darwin-x64.tar.gz

1. Download
cd /tmp
wget https://nodejs.org/download/release/latest-v16.x/node-v16.13.1-darwin-x64.tar.gz
(curl "https://nodejs.org/download/release/latest-v16.x/node-v16.13.1-darwin-x64.tar.gz" -o "node-v16.13.1-darwin-x64.tar.gz")
tar xvfz node-v16.13.1-darwin-x64.tar.gz
mkdir -p /usr/local/nodejs
mv node-v16.13.1-darwin-x64/* /usr/local/nodejs

2. Add to Path
export PATH=$PATH:/usr/local/nodejs/bin

3. Run
node index.js
node -v

4. Install NPM if not installed
npm -v

5. Add NPM modules to Path
export PATH=$PATH:/usr/local/nodejs/bin/node_modules


***************************************************************************************************
NPM
***************************************************************************************************

npm -v
npm init
npm install (in package directory, no arguments - Installs the dependencies in the local node_modules folder)
npm install --production (do not install modules listed in devDependencies)
npm install -g browserify (-g global install)
npm i --global browserify
npm install express --save-dev (updates package.json, saves as dev dependency)
npm uninstall express --save
npm shrinkwrap

npm install        install all the dependencies in your project
npm install <foo>  add the <foo> dependency to your project
npm test           run this project's tests
npm run <foo>      run the script named <foo>
npm <command> -h   quick help on <command>
npm -l             display usage info for all commands
npm help <term>    search for help on <term>
npm help npm       more involved overview


--Nice Packages

npm install -g nodemon (live output)
nodemon index.js
Quokka VSCode Extension - Live Playground
npm i -g jshint (shows errors)
jshint index.js

sudo su
npm install -g browserify (require packages in browsers - browserify.org)
browserify index.js -o bundle.js
webpack
watchify
tinyify

mysql           - MySQL
mongodb         - MongoDB
mongoose        - MongoDB

uniq            - removes duplicates
dayjs           - date/time format
moment          - date/time pretty print - Large package, do not use
axios           - rest client
body-parser     - JSON parser
express         - rest/graphQL server
apollo          - rest/graphQL server
jsonwebtoken    - JWT generation
socket.io       - WebSockets
faker           - generates fake data
formidable      - file upload 
nodemailer      - send email
blintz          - ?
qs              - ?


***************************************************************************************************
Yarn - updates package.json automatically, offline package caching
***************************************************************************************************

https://www.youtube.com/watch?v=7n467QmiANM

npm install -g yarn
yarn install
yarn add express 
yarn add express --dev
yarn remove express
yarn why express (shows package dependencies)
yarn ls
yarn cache ls
yarn test test.js

