
which git
git config --list
git config --global user.name "S. Gokhan Topcu"
git config --global user.email "gtopcu@gmail.com"

git config --global credential.helper cache
git config --global credential.helper 'store --file ~/.my-credentials'

---

```
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:gtopcu/testdockerrepo.git
git remote add origin https://github.com/gtopcu/python_lambda
git push -u origin main
```

---

Configure SSH Keys for GitHub
https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey
https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account

!!! chown must be hukanege for public  & private key & config, not root!
!!! ~ install into /var/root for all users
# list all SSH keys
$ ls -al /Users/hukanege/.ssh
# start the ssh-agent in the background
$ eval "$(ssh-agent -s)"
> Agent pid 59566
$ ssh-add -l -E sha256
> 2048 SHA256:274ffWxgaxq/tSINAykStUL7XWyRNcRTlcST1Ei7gBQ /Users/hukanege/.ssh/id_rsa (RSA)

# if key value doesn't exist:
$ ssh-keygen -t ed25519 -C "gtopcu@gmail.com"
$ open /Users/hukanege/.ssh/config

# if config doesn't exist:
$ touch /Users/hukanege/.ssh/config
Host *
  AddKeysToAgent yes
  UseKeychain yes
  IdentityFile /Users/hukanege/.ssh/id_ed25519
$ ssh-add --apple-use-keychain /Users/hukanege/.ssh/id_ed25519
$ ssh-add -K ~/.ssh/id_ed25519 (for older macs)

# Add new key to GitHub
# Copies the contents of the id_ed25519.pub file to your clipboard
$ pbcopy < /Users/hukanege/.ssh/id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFDkMhzmoRjPZUUTN7sqBRcPpqJ+wPklx3YNE2C/d6O7 gtopcu@gmail.com
# Add key: https://github.com/settings/keys
```

---

git init
git status
git log (--oneline)
git diff
git add readme.txt
git add .
git commit -am "initial"
git checkout master / branch / b6d7c45539810e73dbaf4871b05ca2c8c4440a60
git branch -a
git branch featureBranch
git branch -l
git branch -d featureBranch
git switch -c bugFixBranch
git merge featureBranch

git clone https://github.com/hukanege.git
git remote add <name><url>
git remote add origin https://github.com/gtopcu/python_lambda
git branch --set-upstream-to=origin/main
git push --set-upstream origin main
git push -u origin main
git fetch <remote><branch> (download only, do not merge) 
git pull <remote><branch> (fetch + merge)
git fork
git pull-request

https://opensource.com/article/18/6/git-reset-revert-rebase-commands
git reset --soft/mixed/hard
git reset 9ef9173
git reset current~2
git revert HEAD
git rebase

---

Ignoring files
https://www.atlassian.com/git/tutorials/saving-changes/gitignore#git-ignore-patterns
git rm --cached debug.log

Enforcing commit message/format
https://code-maven.com/enforcing-commit-message-format-in-git
