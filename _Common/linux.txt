

Linux Commands:

**************************** Cron ****************************

https://crontab.guru/
*	any value
,	value list separator
-	range of values
/	step values

48 5 1-6 1,12 0,3   : Run on everyday on 1th & 6th of January & December Sunday-Wednesday at 05:48AM
*/2 * * * *         : Run every second minute - 00:00, 00:02, etc
*/30 * * * *        : Run every 30 minutes - 00:00, 00:30, etc

crontab –l
crontab –e
crontab –u other_username –e
* 2 0 * 4 /root/backup.sh

**************************** General ****************************

sudo !! - execute previous command with sudo
sudo su - execute all with sudo
clear
history
pwd
ls -l -a
ls -a | grep -i Doc
ls -ltr pythonX-bash.py
man <command>
cd ..
cd ~ (go to /root)
cd / (go to root)
mkdir <dirname>
rmdir <dirname>
rm <file>
rm chunk* (all files starting with chunk)
rm -r <dirname> 
mv <source> <target>
cp <source> <target>
cp -r ./Green ./White
cp/COPY --chown=www-data . . 
ln -s ./Downloads/exec.sh 
find conten*

chown -R hukanege /Users/hukanege/.aws/ (recursive for dir)
chown -R www-data /tmp

chmod u-x <filename>
chmod u+rw <filename>
chmod +x  <dir      :   Allow cd on dir 
chmod 777 -R <dir   :   Recursive
chmod 777 <filename>:   Set rwx for owner, group, world
chmod 755 <filename>:   Set rwx for owner, rx for group, x for world
chmod 600 <filename>:   Set rwx for owner, no other user can access the file
chmod 644 <filename>:   Set rwx for owner, r for group members and other users on the system
chmod 400 <filename>:   Allow read by owner
chmod 200 <filename>:   Allow write by owner
chmod 100 <filename>:   For files, allow execution by owner
                        For directories, allow the owner to search in the directory
chmod 040 <filename>:   Allow read by group members

umask: default roles for new files
inode: data structure holding file data, has integer number, holds file size, UID, bin data ref etc

**************************** GREP ****************************

https://www.cyberciti.biz/faq/howto-use-grep-command-in-linux-unix/
-i: ignore case
-r: recursive, for directory scan
-c: total count of occurence

grep "for" bash0.sh
grep -i "FOR" bash0.sh
zgrep "for" bash0.sh.gzip
grep -r "$" .
grep -r -c "$" .
grep -r -h "$" .
cat /etc/passwd | grep -i "boo"


**************************** System ****************************

uname -a : System Info
uname -r
uptime
last reboot
date
cal
id
last
w
who
finger user
hostname
hostname -i
hostnamectl set-hostname k8s-control
lsblk: list disks, / means root disk
df -h : free disk space
du: file sizes
free -m : free memory
ps aux: running apps
htop: system monitor
kill <pid>
shutdown -h now
sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

************************** Variables & Env. Variables ****************************

Variables
* VARIABLE=123456, ref by $VARIABLE

PATH
$ echo $PATH
$ which node
$ export PATH=$PATH:/usr/local/nodejs/bin
$ export GT_ENV_CODE=991453

ENV
* printenv  – Print all or part of environment
* env       – Display all exported environment or run a program in a modified environment
* set       – List the name and value of each shell variable.

To make an environment persistent for a user's environment, export the variable from the user's profile script.
1. Open the current user's profile into a text editor:
$ vi ~/.bash_profile.
2. Add the export command for every environment variable you want to persist 
$ export JAVA_HOME=/opt/openjdk11.
Save your changes.

***************************** Files ****************************

touch <filename.txt>
nano <filename.txt>
vi <filename.txt> (YY, P, U, :(w)q!)
cat <filename.txt>
cat hash1 hash2 > hash12
tail -f <filename.txt>
more <filename.txt>
yum install / apt get install xclip

Create large file
dd if=/dev/urandom of=largefile bs=3145728 count=1 (create large file)

************************** Tar/Zip ***************************

sudo installer -pkg AWSCLIV2.pkg -target /

zip -rq dist-latest.zip src package.json 
zip -r9 ../deployment_package.zip .
zip -g deployment_package.zip lambda_function.py
zipinfo dist-latest.zip
unzip filename.zip
tar -xzf filename.tar.gz
tar -xf zipped.tar
tar -cf zipped.tar picture.png
tar -cf zippeddir.tar directory 
tar -czf zipped.tar.gz picture.png
tar -tf zipped.tar: list contents
gzip filename.tar: gzip & rename to filename.tar.gz 

struct timespec st_atim;  /* time of last access */
struct timespec st_mtim;  /* time of last modification */
struct timespec st_ctim;  /* time of last status change */

************************** apt-get/yum ***************************

--Ubuntu
apt-get update && apt-get install --no-install-recommends --no-install-suggests -y \
             php7.4-fpm \
             php7.4-xmlwriter \
             ..
apt(-get) install aptitude
apt(-get) update
apt(-get) ugrade
apt(-get) remove

aptitude install
aptitude upgrade
aptitude search xx

--Amzn Linux2
yum update -y
yum install httpd -y
service httpd start
chkconfig httpd on

**************************** Network ****************************

ping 127.0.0.1
nc 54.78.7.114 22
ssh -vT git@github.com
nslookup google.com
dig google.com
dig -x google.com: reverse lookup
host google.com: list nameservers
whois google.com
ip addr show
ip address add 192.0.0.1 dev eth0
ethtool eth0
netstat -tupl

wget <link>
curl 54.78.7.114:22
curl "https://awscli.amazonaws.com/AWSCLIV2.pkg" -o "AWSCLIV2.pkg"
curl --create-dirs "https://packages.sury.org/php/apt.gpg" -o "/etc/apk/trusted.gpg.d/php.gpg"

curl -X GET http://api.com/customers/1000
curl -X POST -H "Content-Type: application/json" -d '{ "username":"gokhan", "age":36 }' http://api.com/customers
curl -X DELETE http://api.com/customers/1000

curl -v google.com (GET & show response)
curl -v -X POST google.com -F "user='<script><alert>Alert me</alert></script>'" (CSS attack)
curl -v -X POST google.com -F "user='AND 1=1'" (SQL Injection attack)
curl -d '{}' https://o55ybz0sc5.execute-api.us-east-1.amazonaws.com/v1/graphql (Post with data)

nano /var/logs 
sudo nano /etc/hosts
sudo vi /etc/hosts
(w):q!

telnet 54.78.7.114:22
ipconfig -a
netstat -all

**************************** Other ****************************

#HardLink - only for files in the same fileystem
ln ~/bin/topprocs.sh tp
ln /Users/hukanege/Downloads/macKeyboard.png macKeysHard.png

#SymbolicLink - a link to any file/directory
ln -s ~/bin/topprocs.sh tps.sh 
ln -s /Users/hukanege/Downloads/macKeyboard.png macKeysSymb

**************************** Other ****************************

##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1       localhost
255.255.255.255 broadcasthost
::1             localhost
# Added by Docker Desktop
# To allow the same kube context to work on the host and the container:
127.0.0.1 kubernetes.docker.internal
# End of section